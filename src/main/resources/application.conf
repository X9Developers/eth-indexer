# https://www.playframework.com/documentation/latest/Configuration

play.i18n.langs = ["en"]

play.filters.hosts {
  allowed = ["localhost", "localhost:9000", "127.0.0.1:9000"]
  allowed += ${?APP_HOST}
}

play.http {
  secret.key="changeme"
  secret.key=${?PLAY_APPLICATION_SECRET}
}

play.filters.enabled += play.filters.cors.CORSFilter
play.filters.disabled += "play.filters.csrf.CSRFFilter"

play.modules.enabled += "io.stakenet.eth.explorer.modules.ETHServiceModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.ExecutorsModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.PollerSynchronizerModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.ConfigurationModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.RepositoriesModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.ETHClientModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.CurrencyServiceModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.RetryableFutureModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.CurrencySynchronizerModule"
play.modules.enabled += "io.stakenet.eth.explorer.modules.ActorsModule"
# play.modules.enabled += "io.stakenet.eth.explorer.modules.TransactionStatusSynchronizerModule"


db.default {
  driver = "org.postgresql.Driver"
  host = "localhost:5432"
  database = "eth_blockchain"
  username = "postgres"
  password = "postgres"

  host = ${?ETH_PSQL_HOST}
  database = ${?ETH_PSQL_DATABASE}
  username = ${?ETH_PSQL_USERNAME}
  password = ${?ETH_PSQL_PASSWORD}

  url = "jdbc:postgresql://"${db.default.host}"/"${db.default.database}
}

play.evolutions {
  autoApply = true

  db.default {
    enabled = true
    autocommit = true
  }
}

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

blocking.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    // very high bound to process lots of blocking operations concurrently
    fixed-pool-size = 5000
  }
}

externalService.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 50
  }
}

eth {
  url = "https://mainnet.infura.io/v3/f110376574c54d6fb6caeb30f82a8e73"

  url = ${?ETH_NODE_URL}
}

synchronizer {
  syncTransactionsFromBlock = 0

  syncTransactionsFromBlock = ${?ETH_SYNC_TRANSACTIONS_FROM_BLOCK}
}

coinMarketCap {
  host = "https://pro-api.coinmarketcap.com"
  key = "REPLACE_ME"
  ethCoinId = "1027"
  wethCoinId = "2396"
  usdtCoinId = "825"


  host = ${?ETH_COIN_MARKET_CAP_HOST}
  key = ${?ETH_COIN_MARKET_CAP_KEY}
  ethCoinId = ${?ETH_COIN_MARKET_CAP_COIN_ID}
  usdtCoinId = ${?USDT_COIN_MARKET_CAP_COIN_ID}
}

currencySynchronizer {
  enabled = false
  initialDelay = "10 seconds"
  highPriorityInterval = "45 minutes"
  lowPriorityInterval = "24 hours"
}
